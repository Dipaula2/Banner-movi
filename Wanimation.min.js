function WAnimation(e, t) {
    for (var $ in ((this.arrAnimations = e || []),
    (this.Time = {
        array: [],
        clear: function () {
            this.array.forEach(function (e) {
                clearTimeout(e);
            });
        },
    }),
    (this.times = 0),
    (this.defaults = { delayBefore: 0, duration: 500, delayAfter: 0, loop: !0, clearAfterEnd: !0, easing: "linear", functionAfterLoop: function () {} }),
    (this.options = t || {}),
    this.defaults))
        this.defaults.hasOwnProperty($) && !this.options.hasOwnProperty($) && (this.options[$] = this.defaults[$]);
    (this.options.loop = !0 === this.options.loop ? -1 : parseInt(this.options.loop)),
        (this.getEasing = function e(t) {
            switch (t) {
                case "ease":
                    return [0.25, 0.1, 0.25, 1];
                case "ease-in":
                    return [0.42, 0, 1, 1];
                case "ease-out":
                    return [0, 0, 0.58, 1];
                case "ease-in":
                    return [0.42, 0, 0.58, 1];
                case "easeInQuad":
                    return [0.55, 0.085, 0.68, 0.53];
                case "easeInCubic":
                    return [0.55, 0.055, 0.675, 0.19];
                case "easeInQuart":
                    return [0.895, 0.03, 0.685, 0.22];
                case "easeInQuint":
                    return [0.755, 0.05, 0.855, 0.06];
                case "easeInSine":
                    return [0.47, 0, 0.745, 0.715];
                case "easeInExpo":
                    return [0.95, 0.05, 0.795, 0.035];
                case "easeInCirc":
                    return [0.6, 0.04, 0.98, 0.335];
                case "easeInBack":
                    return [0.6, -0.28, 0.735, 0.045];
                case "easeOutQuad":
                    return [0.25, 0.46, 0.45, 0.94];
                case "easeOutCubic":
                    return [0.215, 0.61, 0.355, 1];
                case "easeOutQuart":
                    return [0.165, 0.84, 0.44, 1];
                case "easeOutQuint":
                    return [0.23, 1, 0.32, 1];
                case "easeOutSine":
                    return [0.39, 0.575, 0.565, 1];
                case "easeOutExpo":
                    return [0.19, 1, 0.22, 1];
                case "easeOutCirc":
                    return [0.075, 0.82, 0.165, 1];
                case "easeOutBack":
                    return [0.175, 0.885, 0.32, 1.275];
                case "easeOutBack2":
                    return [0.5, 2, 1, 1];
                case "easeInOutQuad":
                    return [0.455, 0.03, 0.515, 0.955];
                case "easeInOutCubic":
                    return [0.645, 0.045, 0.355, 1];
                case "easeInOutQuart":
                    return [0.77, 0, 0.175, 1];
                case "easeInOutQuint":
                    return [0.86, 0, 0.07, 1];
                case "easeInOutSine":
                    return [0.445, 0.05, 0.55, 0.95];
                case "easeInOutExpo":
                    return [1, 0, 0, 1];
                case "easeInOutCirc":
                    return [0.785, 0.135, 0.15, 0.86];
                case "easeInOutBack":
                    return [0.68, -0.55, 0.265, 1.55];
                case "spring1":
                    return [300, 8];
                case "spring2":
                    return [600, 8];
                case "oneStep":
                    return [1];
                case "twoStep":
                    return [2];
                case "threeStep":
                    return [3];
                case "fourStep":
                    return [4];
                case "fiveStep":
                    return [5];
                case "sixStep":
                    return [6];
                default:
                    return [0.25, 0.25, 0.75, 0.75];
            }
        }),
        (this.animate = function e(t, $, n) {
            for (var a in (($ = $ || {}), this.defaults)) this.defaults.hasOwnProperty(a) && !$.hasOwnProperty(a) && ($[a] = this.defaults[a]);
            t.Time.array.push(
                setTimeout(
                    function (e) {
                        var a = document.querySelector($.id);
                        $.hasOwnProperty("action")
                            ? ($.action(),
                              t.Time.array.push(
                                  setTimeout(function () {
                                      n();
                                  }, $.delayAfter)
                              ))
                            : Velocity(a, $.animations, {
                                  duration: $.duration,
                                  easing: e.getEasing($.easing),
                                  complete: function () {
                                      t.Time.array.push(
                                          setTimeout(function () {
                                              n();
                                          }, $.delayAfter)
                                      );
                                  },
                              });
                    },
                    $.delayBefore,
                    this
                )
            );
        }),
        (this.startAnimation = function () {
            var e,
                t,
                $,
                n,
                a = this;
            if ("undefined" == typeof Velocity) {
                (e = function () {
                    if ("undefined" == typeof Velocity) throw "Can't load Velocity!!!";
                    a.arrAnimations.length > 0 && a.nextAnimation(0);
                }),
                    ((t = document.createElement("script")).src = "velocity.min.js"),
                    ($ = document.getElementsByTagName("head")[0]),
                    (n = !1),
                    (t.onload = t.onreadystatechange = function () {
                        n || (this.readyState && "loaded" != this.readyState && "complete" != this.readyState) || ((n = !0), e(), (t.onload = t.onreadystatechange = null), $.removeChild(t));
                    }),
                    $.appendChild(t);
            } else this.arrAnimations.length > 0 && this.nextAnimation(0);
        }),
        (this.nextAnimation = function (e) {
            var t = this,
                $ = this.arrAnimations[e];
            if (e < this.arrAnimations.length) {
                if (Array.isArray($))
                    for (var n = $.length, a = 0; a < n; a++)
                        !(function (a) {
                            var s = $[a];
                            t.animate(t, s, function () {
                                s.execfuncao && s.execfuncao(), a + 1 == n && t.nextAnimation(e + 1);
                            });
                        })(a);
                else
                    t.animate(t, $, function () {
                        $.execfuncao && $.execfuncao(), t.nextAnimation(e + 1);
                    });
            } else -1 != this.options.loop && this.times < this.options.loop ? (this.options.functionAfterLoop(), this.restartAnimation(), this.times++) : -1 == this.options.loop ? this.restartAnimation() : this.stopAnimation();
        }),
        (this.removeStyles = function () {
            (function e(t) {
                Array.isArray(t)
                    ? t.forEach(function (t) {
                          e(t);
                      })
                    : t.hasOwnProperty("id") && (t.execfuncao && fioAnimimation.reset(), document.querySelector(t.id).removeAttribute("style"));
            })(this.arrAnimations);
        }),
        (this.stopAnimation = function () {
            this.Time.clear(), this.options.clearAfterEnd && this.removeStyles();
        }),
        (this.restartAnimation = function () {
            this.Time.clear(), this.removeStyles(), this.startAnimation();
        });
}
